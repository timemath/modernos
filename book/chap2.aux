\relax 
\providecommand\hyper@newdestlabel[2]{}
\@writefile{toc}{\contentsline {chapter}{\numberline {第二章\hspace  {.3em}}进程与线程}{89}{chapter.2}\protected@file@percent }
\@writefile{lof}{\addvspace {10.0pt}}
\@writefile{lot}{\addvspace {10.0pt}}
\@writefile{toc}{\contentsline {section}{\numberline {2.1}进程}{89}{section.2.1}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1.1}进程模型}{90}{subsection.2.1.1}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {2.1}{\ignorespaces a)　四个程序的多道程序 b)　四个独立的，顺序的概念模型　c)　只有一个程序在某一个时刻是活动的}}{91}{figure.2.1}\protected@file@percent }
\newlabel{fig:processconcept}{{2.1}{91}{a)　四个程序的多道程序 b)　四个独立的，顺序的概念模型　c)　只有一个程序在某一个时刻是活动的}{figure.2.1}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1.2}进程创建}{92}{subsection.2.1.2}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1.3}进程终止}{95}{subsection.2.1.3}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1.4}进程层次}{95}{subsection.2.1.4}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1.5}进程状态}{96}{subsection.2.1.5}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {2.2}{\ignorespaces 一个进程有运行，就绪和阻塞三种状态，该图展示了进程如何在这三种状态下转换}}{97}{figure.2.2}\protected@file@percent }
\newlabel{fig:processstatus}{{2.2}{97}{一个进程有运行，就绪和阻塞三种状态，该图展示了进程如何在这三种状态下转换}{figure.2.2}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {2.3}{\ignorespaces 最底层基于进程的操作系统处理中断和调度，在此层之上是顺序进程}}{98}{figure.2.3}\protected@file@percent }
\newlabel{fig:scheduler}{{2.3}{98}{最底层基于进程的操作系统处理中断和调度，在此层之上是顺序进程}{figure.2.3}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1.6}进程实现}{98}{subsection.2.1.6}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {2.4}{\ignorespaces 一个典型的进程表项的字段}}{99}{figure.2.4}\protected@file@percent }
\newlabel{fig:processentry}{{2.4}{99}{一个典型的进程表项的字段}{figure.2.4}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {2.5}{\ignorespaces 中断发生后操作系统最底层的工作步骤}}{100}{figure.2.5}\protected@file@percent }
\newlabel{fig:interupt}{{2.5}{100}{中断发生后操作系统最底层的工作步骤}{figure.2.5}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {2.6}{\ignorespaces CPU的利用率是内存中进程数目的函数}}{101}{figure.2.6}\protected@file@percent }
\newlabel{fig:multiprogrammingdegree}{{2.6}{101}{CPU的利用率是内存中进程数目的函数}{figure.2.6}{}}
\@writefile{toc}{\contentsline {section}{\numberline {2.2}线程}{102}{section.2.2}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2.1}线程的使用}{102}{subsection.2.2.1}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {2.7}{\ignorespaces 一个拥有三个线程的文字处理软件}}{104}{figure.2.7}\protected@file@percent }
\newlabel{fig:multithreads}{{2.7}{104}{一个拥有三个线程的文字处理软件}{figure.2.7}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {2.8}{\ignorespaces 一个多线程的网络服务器}}{106}{figure.2.8}\protected@file@percent }
\newlabel{fig:multithreadswebserver}{{2.8}{106}{一个多线程的网络服务器}{figure.2.8}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {2.9}{\ignorespaces 图2-8的代码架构 (a)分派器线程 (b)工作线程}}{107}{figure.2.9}\protected@file@percent }
\newlabel{fig:coderouting}{{2.9}{107}{图2-8的代码架构 (a)分派器线程 (b)工作线程}{figure.2.9}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {2.10}{\ignorespaces 构建服务器的三种方式}}{108}{figure.2.10}\protected@file@percent }
\newlabel{fig:threeways}{{2.10}{108}{构建服务器的三种方式}{figure.2.10}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2.2}经典的线程模型}{108}{subsection.2.2.2}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {2.11}{\ignorespaces a)三个进程每个含有一个线程，b)一个进程包含三个线程。}}{109}{figure.2.11}\protected@file@percent }
\newlabel{fig:processthread}{{2.11}{109}{a)三个进程每个含有一个线程，b)一个进程包含三个线程。}{figure.2.11}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {2.12}{\ignorespaces a)第一列给出了线程间共享内容 b)第二列给出了线程间私有内容}}{110}{figure.2.12}\protected@file@percent }
\newlabel{fig:sharecontents}{{2.12}{110}{a)第一列给出了线程间共享内容 b)第二列给出了线程间私有内容}{figure.2.12}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {2.13}{\ignorespaces 每一个线程都有自己的栈}}{111}{figure.2.13}\protected@file@percent }
\newlabel{fig:threadstack}{{2.13}{111}{每一个线程都有自己的栈}{figure.2.13}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2.3}POSIX进程}{113}{subsection.2.2.3}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {2.14}{\ignorespaces 一些Pthread函数调用}}{113}{figure.2.14}\protected@file@percent }
\newlabel{fig:pthread}{{2.14}{113}{一些Pthread函数调用}{figure.2.14}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2.4}在用户空间实现线程}{114}{subsection.2.2.4}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2.5}在内核中实现线程}{117}{subsection.2.2.5}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2.6}混合实现}{118}{subsection.2.2.6}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2.7}调度器激活}{119}{subsection.2.2.7}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2.8}弹出线程}{120}{subsection.2.2.8}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2.9}单线程的程序多线程化}{121}{subsection.2.2.9}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {2.3}进程间通信}{124}{section.2.3}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {2.3.1}竞争条件}{124}{subsection.2.3.1}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {2.3.2}临界区}{126}{subsection.2.3.2}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {2.3.3}带忙等待的互斥}{127}{subsection.2.3.3}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {2.3.4}睡眠与觉醒}{131}{subsection.2.3.4}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {2.3.5}信号量}{133}{subsection.2.3.5}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {2.3.6}互斥量}{135}{subsection.2.3.6}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {2.15}{\ignorespaces 一个使用线程的示例程序}}{139}{figure.2.15}\protected@file@percent }
\newlabel{fig:threadexample}{{2.15}{139}{一个使用线程的示例程序}{figure.2.15}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {2.16}{\ignorespaces (a) 一个用户级线程包 (b) 一个被内核管理的线程包}}{140}{figure.2.16}\protected@file@percent }
\newlabel{fig:threadpackage}{{2.16}{140}{(a) 一个用户级线程包 (b) 一个被内核管理的线程包}{figure.2.16}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {2.17}{\ignorespaces 将用户级线程多路复用到内核级线程}}{140}{figure.2.17}\protected@file@percent }
\newlabel{fig:multiplexthreads}{{2.17}{140}{将用户级线程多路复用到内核级线程}{figure.2.17}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {2.18}{\ignorespaces 当一个消息结束的时候创建新的线程。a)在消息到达之前，b)在消息到达之后。}}{141}{figure.2.18}\protected@file@percent }
\newlabel{fig:pop-upthreads}{{2.18}{141}{当一个消息结束的时候创建新的线程。a)在消息到达之前，b)在消息到达之后。}{figure.2.18}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {2.19}{\ignorespaces 进程间对于使用一个全局变量发生冲突。}}{142}{figure.2.19}\protected@file@percent }
\newlabel{fig:globalvariableonthreads}{{2.19}{142}{进程间对于使用一个全局变量发生冲突。}{figure.2.19}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {2.20}{\ignorespaces 进程可以拥有私有的环境变量}}{143}{figure.2.20}\protected@file@percent }
\newlabel{fig:privatevariables}{{2.20}{143}{进程可以拥有私有的环境变量}{figure.2.20}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {2.21}{\ignorespaces 两个进程同时想访问共享内存}}{144}{figure.2.21}\protected@file@percent }
\newlabel{fig:sharedmemory}{{2.21}{144}{两个进程同时想访问共享内存}{figure.2.21}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {2.22}{\ignorespaces 使用临界区的互斥}}{144}{figure.2.22}\protected@file@percent }
\newlabel{fig:mutualexclusion}{{2.22}{144}{使用临界区的互斥}{figure.2.22}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {2.23}{\ignorespaces 一种临界区问题的解决方案。请注意，在两种情况下分号都中止了while循环。a) 进程0，b) 进程1。}}{145}{figure.2.23}\protected@file@percent }
\newlabel{fig:strictalternation}{{2.23}{145}{一种临界区问题的解决方案。请注意，在两种情况下分号都中止了while循环。a) 进程0，b) 进程1。}{figure.2.23}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {2.24}{\ignorespaces Peterson算法}}{145}{figure.2.24}\protected@file@percent }
\newlabel{fig:peterson}{{2.24}{145}{Peterson算法}{figure.2.24}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {2.25}{\ignorespaces 使用TSL指令进入和离开临界区}}{146}{figure.2.25}\protected@file@percent }
\newlabel{fig:tsl}{{2.25}{146}{使用TSL指令进入和离开临界区}{figure.2.25}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {2.26}{\ignorespaces 使用XCHG指令进入和离开临界区}}{146}{figure.2.26}\protected@file@percent }
\newlabel{fig:xchg}{{2.26}{146}{使用XCHG指令进入和离开临界区}{figure.2.26}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {2.27}{\ignorespaces 生产者消费者问题带有一个致命的竞争条件问题}}{147}{figure.2.27}\protected@file@percent }
\newlabel{fig:producerconsumer}{{2.27}{147}{生产者消费者问题带有一个致命的竞争条件问题}{figure.2.27}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {2.28}{\ignorespaces 使用信号量的生产者和消费者问题}}{148}{figure.2.28}\protected@file@percent }
\newlabel{fig:semaphores}{{2.28}{148}{使用信号量的生产者和消费者问题}{figure.2.28}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {2.29}{\ignorespaces mutex\_lock和mutex\_unlock的实现}}{149}{figure.2.29}\protected@file@percent }
\newlabel{fig:mutex}{{2.29}{149}{mutex\_lock和mutex\_unlock的实现}{figure.2.29}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {2.30}{\ignorespaces 和互斥量相关的Pthreads进程}}{149}{figure.2.30}\protected@file@percent }
\newlabel{fig:pthreadsmutex}{{2.30}{149}{和互斥量相关的Pthreads进程}{figure.2.30}{}}
\@setckpt{book/chap2}{
\setcounter{page}{150}
\setcounter{equation}{0}
\setcounter{enumi}{0}
\setcounter{enumii}{0}
\setcounter{enumiii}{0}
\setcounter{enumiv}{0}
\setcounter{footnote}{2}
\setcounter{mpfootnote}{0}
\setcounter{part}{0}
\setcounter{chapter}{2}
\setcounter{section}{3}
\setcounter{subsection}{6}
\setcounter{subsubsection}{0}
\setcounter{paragraph}{0}
\setcounter{subparagraph}{0}
\setcounter{figure}{30}
\setcounter{table}{0}
\setcounter{tcbbreakpart}{0}
\setcounter{tcblayer}{0}
\setcounter{lstnumber}{1}
\setcounter{tcblisting}{0}
\setcounter{parentequation}{0}
\setcounter{Item}{0}
\setcounter{Hfootnote}{2}
\setcounter{Hy@AnnotLevel}{0}
\setcounter{bookmark@seq@number}{83}
\setcounter{myDefinition}{0}
\setcounter{myTheorem}{0}
\setcounter{myCorollary}{0}
\setcounter{proof}{0}
\setcounter{Solution}{0}
\setcounter{lstlisting}{0}
\setcounter{section@level}{0}
}
